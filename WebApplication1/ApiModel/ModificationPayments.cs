/* 
 * Allegro REST API
 *
 * https://developer.allegro.pl/about
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace WebApplication1.ApiModel
{
    /// <summary>
    /// ModificationPayments
    /// </summary>
    [DataContract]
        public partial class ModificationPayments :  IEquatable<ModificationPayments>, IValidatableObject
    {
        /// <summary>
        /// Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE
        /// </summary>
        /// <value>Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum InvoiceEnum
        {
            /// <summary>
            /// Enum VAT for value: VAT
            /// </summary>
            [EnumMember(Value = "VAT")]
            VAT = 0,
            /// <summary>
            /// Enum VATMARGIN for value: VAT_MARGIN
            /// </summary>
            [EnumMember(Value = "VAT_MARGIN")]
            VATMARGIN = 1,
            /// <summary>
            /// Enum WITHOUTVAT for value: WITHOUT_VAT
            /// </summary>
            [EnumMember(Value = "WITHOUT_VAT")]
            WITHOUTVAT = 2,
            /// <summary>
            /// Enum NOINVOICE for value: NO_INVOICE
            /// </summary>
            [EnumMember(Value = "NO_INVOICE")]
            NOINVOICE = 3        }
        /// <summary>
        /// Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE
        /// </summary>
        /// <value>Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE</value>
        [DataMember(Name="invoice", EmitDefaultValue=false)]
        public InvoiceEnum? Invoice { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ModificationPayments" /> class.
        /// </summary>
        /// <param name="invoice">Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE.</param>
        public ModificationPayments(InvoiceEnum? invoice = default(InvoiceEnum?))
        {
            this.Invoice = invoice;
        }
        

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModificationPayments {\n");
            sb.Append("  Invoice: ").Append(Invoice).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModificationPayments);
        }

        /// <summary>
        /// Returns true if ModificationPayments instances are equal
        /// </summary>
        /// <param name="input">Instance of ModificationPayments to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModificationPayments input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Invoice == input.Invoice ||
                    (this.Invoice != null &&
                    this.Invoice.Equals(input.Invoice))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Invoice != null)
                    hashCode = hashCode * 59 + this.Invoice.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
