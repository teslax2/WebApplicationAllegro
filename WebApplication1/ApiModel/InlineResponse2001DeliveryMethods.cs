/* 
 * Allegro REST API
 *
 * https://developer.allegro.pl/about
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace WebApplication1.ApiModel
{
    /// <summary>
    /// InlineResponse2001DeliveryMethods
    /// </summary>
    [DataContract]
        public partial class InlineResponse2001DeliveryMethods :  IEquatable<InlineResponse2001DeliveryMethods>, IValidatableObject
    {
        /// <summary>
        /// Whether the payment is to be collected in advance or on delivery.
        /// </summary>
        /// <value>Whether the payment is to be collected in advance or on delivery.</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum PaymentPolicyEnum
        {
            /// <summary>
            /// Enum INADVANCE for value: IN_ADVANCE
            /// </summary>
            [EnumMember(Value = "IN_ADVANCE")]
            INADVANCE = 0,
            /// <summary>
            /// Enum CASHONDELIVERY for value: CASH_ON_DELIVERY
            /// </summary>
            [EnumMember(Value = "CASH_ON_DELIVERY")]
            CASHONDELIVERY = 1        }
        /// <summary>
        /// Whether the payment is to be collected in advance or on delivery.
        /// </summary>
        /// <value>Whether the payment is to be collected in advance or on delivery.</value>
        [DataMember(Name="paymentPolicy", EmitDefaultValue=false)]
        public PaymentPolicyEnum? PaymentPolicy { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse2001DeliveryMethods" /> class.
        /// </summary>
        /// <param name="id">Delivery method ID..</param>
        /// <param name="name">Delivery method name..</param>
        /// <param name="paymentPolicy">Whether the payment is to be collected in advance or on delivery..</param>
        /// <param name="allegroEndorsed">Indicates Allegro signed delivery method, which allows to easily distinguish similar delivery methods with various restrictions, e.g. Allegro Paczkomaty 24/7 InPost from Paczkomaty 24/7..</param>
        /// <param name="shippingRatesConstraints">shippingRatesConstraints.</param>
        public InlineResponse2001DeliveryMethods(string id = default(string), string name = default(string), PaymentPolicyEnum? paymentPolicy = default(PaymentPolicyEnum?), bool? allegroEndorsed = default(bool?), InlineResponse2001ShippingRatesConstraints shippingRatesConstraints = default(InlineResponse2001ShippingRatesConstraints))
        {
            this.Id = id;
            this.Name = name;
            this.PaymentPolicy = paymentPolicy;
            this.AllegroEndorsed = allegroEndorsed;
            this.ShippingRatesConstraints = shippingRatesConstraints;
        }
        
        /// <summary>
        /// Delivery method ID.
        /// </summary>
        /// <value>Delivery method ID.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Delivery method name.
        /// </summary>
        /// <value>Delivery method name.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }


        /// <summary>
        /// Indicates Allegro signed delivery method, which allows to easily distinguish similar delivery methods with various restrictions, e.g. Allegro Paczkomaty 24/7 InPost from Paczkomaty 24/7.
        /// </summary>
        /// <value>Indicates Allegro signed delivery method, which allows to easily distinguish similar delivery methods with various restrictions, e.g. Allegro Paczkomaty 24/7 InPost from Paczkomaty 24/7.</value>
        [DataMember(Name="allegroEndorsed", EmitDefaultValue=false)]
        public bool? AllegroEndorsed { get; set; }

        /// <summary>
        /// Gets or Sets ShippingRatesConstraints
        /// </summary>
        [DataMember(Name="shippingRatesConstraints", EmitDefaultValue=false)]
        public InlineResponse2001ShippingRatesConstraints ShippingRatesConstraints { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse2001DeliveryMethods {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PaymentPolicy: ").Append(PaymentPolicy).Append("\n");
            sb.Append("  AllegroEndorsed: ").Append(AllegroEndorsed).Append("\n");
            sb.Append("  ShippingRatesConstraints: ").Append(ShippingRatesConstraints).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse2001DeliveryMethods);
        }

        /// <summary>
        /// Returns true if InlineResponse2001DeliveryMethods instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse2001DeliveryMethods to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse2001DeliveryMethods input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.PaymentPolicy == input.PaymentPolicy ||
                    (this.PaymentPolicy != null &&
                    this.PaymentPolicy.Equals(input.PaymentPolicy))
                ) && 
                (
                    this.AllegroEndorsed == input.AllegroEndorsed ||
                    (this.AllegroEndorsed != null &&
                    this.AllegroEndorsed.Equals(input.AllegroEndorsed))
                ) && 
                (
                    this.ShippingRatesConstraints == input.ShippingRatesConstraints ||
                    (this.ShippingRatesConstraints != null &&
                    this.ShippingRatesConstraints.Equals(input.ShippingRatesConstraints))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.PaymentPolicy != null)
                    hashCode = hashCode * 59 + this.PaymentPolicy.GetHashCode();
                if (this.AllegroEndorsed != null)
                    hashCode = hashCode * 59 + this.AllegroEndorsed.GetHashCode();
                if (this.ShippingRatesConstraints != null)
                    hashCode = hashCode * 59 + this.ShippingRatesConstraints.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
