/* 
 * Allegro REST API
 *
 * https://developer.allegro.pl/about
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace WebApplication1.ApiModel
{
    /// <summary>
    /// Information about publication of the given offer.
    /// </summary>
    [DataContract]
        public partial class OfferEventEndedOfferPublication :  IEquatable<OfferEventEndedOfferPublication>, IValidatableObject
    {
        /// <summary>
        /// Indicates the reason for ending the offer:  - &#x60;USER&#x60; - offer ended by the seller.  - &#x60;ADMIN&#x60; - offer ended by an admin.  - &#x60;EXPIRATION&#x60; - offer ended because all available items had been sold out or offer duration had expired (valid for    offers with specified duration).  - &#x60;ERROR&#x60; - offer ended due to internal problem with offer publication. The publication command responded with    success status, but further processing failed.  - &#x60;UNKNOWN&#x60; - in rare cases the reason might be unknown.
        /// </summary>
        /// <value>Indicates the reason for ending the offer:  - &#x60;USER&#x60; - offer ended by the seller.  - &#x60;ADMIN&#x60; - offer ended by an admin.  - &#x60;EXPIRATION&#x60; - offer ended because all available items had been sold out or offer duration had expired (valid for    offers with specified duration).  - &#x60;ERROR&#x60; - offer ended due to internal problem with offer publication. The publication command responded with    success status, but further processing failed.  - &#x60;UNKNOWN&#x60; - in rare cases the reason might be unknown.</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum EndedByEnum
        {
            /// <summary>
            /// Enum USER for value: USER
            /// </summary>
            [EnumMember(Value = "USER")]
            USER = 0,
            /// <summary>
            /// Enum ADMIN for value: ADMIN
            /// </summary>
            [EnumMember(Value = "ADMIN")]
            ADMIN = 1,
            /// <summary>
            /// Enum EXPIRATION for value: EXPIRATION
            /// </summary>
            [EnumMember(Value = "EXPIRATION")]
            EXPIRATION = 2,
            /// <summary>
            /// Enum ERROR for value: ERROR
            /// </summary>
            [EnumMember(Value = "ERROR")]
            ERROR = 3,
            /// <summary>
            /// Enum UNKNOWN for value: UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWN = 4        }
        /// <summary>
        /// Indicates the reason for ending the offer:  - &#x60;USER&#x60; - offer ended by the seller.  - &#x60;ADMIN&#x60; - offer ended by an admin.  - &#x60;EXPIRATION&#x60; - offer ended because all available items had been sold out or offer duration had expired (valid for    offers with specified duration).  - &#x60;ERROR&#x60; - offer ended due to internal problem with offer publication. The publication command responded with    success status, but further processing failed.  - &#x60;UNKNOWN&#x60; - in rare cases the reason might be unknown.
        /// </summary>
        /// <value>Indicates the reason for ending the offer:  - &#x60;USER&#x60; - offer ended by the seller.  - &#x60;ADMIN&#x60; - offer ended by an admin.  - &#x60;EXPIRATION&#x60; - offer ended because all available items had been sold out or offer duration had expired (valid for    offers with specified duration).  - &#x60;ERROR&#x60; - offer ended due to internal problem with offer publication. The publication command responded with    success status, but further processing failed.  - &#x60;UNKNOWN&#x60; - in rare cases the reason might be unknown.</value>
        [DataMember(Name="endedBy", EmitDefaultValue=false)]
        public EndedByEnum EndedBy { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OfferEventEndedOfferPublication" /> class.
        /// </summary>
        /// <param name="endedBy">Indicates the reason for ending the offer:  - &#x60;USER&#x60; - offer ended by the seller.  - &#x60;ADMIN&#x60; - offer ended by an admin.  - &#x60;EXPIRATION&#x60; - offer ended because all available items had been sold out or offer duration had expired (valid for    offers with specified duration).  - &#x60;ERROR&#x60; - offer ended due to internal problem with offer publication. The publication command responded with    success status, but further processing failed.  - &#x60;UNKNOWN&#x60; - in rare cases the reason might be unknown. (required).</param>
        /// <param name="endedAt">Offer publication ending date and time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format in UTC - &#x60;yyyy-MM-ddTHH:mm:ssZ&#x60;..</param>
        public OfferEventEndedOfferPublication(EndedByEnum endedBy = default(EndedByEnum), DateTime? endedAt = default(DateTime?))
        {
            // to ensure "endedBy" is required (not null)
            if (endedBy == null)
            {
                throw new InvalidDataException("endedBy is a required property for OfferEventEndedOfferPublication and cannot be null");
            }
            else
            {
                this.EndedBy = endedBy;
            }
            this.EndedAt = endedAt;
        }
        

        /// <summary>
        /// Offer publication ending date and time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format in UTC - &#x60;yyyy-MM-ddTHH:mm:ssZ&#x60;.
        /// </summary>
        /// <value>Offer publication ending date and time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format in UTC - &#x60;yyyy-MM-ddTHH:mm:ssZ&#x60;.</value>
        [DataMember(Name="endedAt", EmitDefaultValue=false)]
        public DateTime? EndedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OfferEventEndedOfferPublication {\n");
            sb.Append("  EndedBy: ").Append(EndedBy).Append("\n");
            sb.Append("  EndedAt: ").Append(EndedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OfferEventEndedOfferPublication);
        }

        /// <summary>
        /// Returns true if OfferEventEndedOfferPublication instances are equal
        /// </summary>
        /// <param name="input">Instance of OfferEventEndedOfferPublication to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OfferEventEndedOfferPublication input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EndedBy == input.EndedBy ||
                    (this.EndedBy != null &&
                    this.EndedBy.Equals(input.EndedBy))
                ) && 
                (
                    this.EndedAt == input.EndedAt ||
                    (this.EndedAt != null &&
                    this.EndedAt.Equals(input.EndedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EndedBy != null)
                    hashCode = hashCode * 59 + this.EndedBy.GetHashCode();
                if (this.EndedAt != null)
                    hashCode = hashCode * 59 + this.EndedAt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
