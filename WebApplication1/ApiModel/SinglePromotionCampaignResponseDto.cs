/* 
 * Allegro REST API
 *
 * https://developer.allegro.pl/about
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace WebApplication1.ApiModel
{
    /// <summary>
    /// SinglePromotionCampaignResponseDto
    /// </summary>
    [DataContract]
        public partial class SinglePromotionCampaignResponseDto :  IEquatable<SinglePromotionCampaignResponseDto>, IValidatableObject
    {
        /// <summary>
        /// Defines Status
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum StatusEnum
        {
            /// <summary>
            /// Enum PENDING for value: PENDING
            /// </summary>
            [EnumMember(Value = "PENDING")]
            PENDING = 0,
            /// <summary>
            /// Enum ACTIVE for value: ACTIVE
            /// </summary>
            [EnumMember(Value = "ACTIVE")]
            ACTIVE = 1,
            /// <summary>
            /// Enum SUSPENDED for value: SUSPENDED
            /// </summary>
            [EnumMember(Value = "SUSPENDED")]
            SUSPENDED = 2        }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SinglePromotionCampaignResponseDto" /> class.
        /// </summary>
        /// <param name="campaign">campaign (required).</param>
        /// <param name="promotion">promotion (required).</param>
        /// <param name="status">status (required).</param>
        public SinglePromotionCampaignResponseDto(CampaignResponseDto campaign = default(CampaignResponseDto), PromotionResponseDto promotion = default(PromotionResponseDto), StatusEnum status = default(StatusEnum))
        {
            // to ensure "campaign" is required (not null)
            if (campaign == null)
            {
                throw new InvalidDataException("campaign is a required property for SinglePromotionCampaignResponseDto and cannot be null");
            }
            else
            {
                this.Campaign = campaign;
            }
            // to ensure "promotion" is required (not null)
            if (promotion == null)
            {
                throw new InvalidDataException("promotion is a required property for SinglePromotionCampaignResponseDto and cannot be null");
            }
            else
            {
                this.Promotion = promotion;
            }
            // to ensure "status" is required (not null)
            if (status == null)
            {
                throw new InvalidDataException("status is a required property for SinglePromotionCampaignResponseDto and cannot be null");
            }
            else
            {
                this.Status = status;
            }
        }
        
        /// <summary>
        /// Gets or Sets Campaign
        /// </summary>
        [DataMember(Name="campaign", EmitDefaultValue=false)]
        public CampaignResponseDto Campaign { get; set; }

        /// <summary>
        /// Gets or Sets Promotion
        /// </summary>
        [DataMember(Name="promotion", EmitDefaultValue=false)]
        public PromotionResponseDto Promotion { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SinglePromotionCampaignResponseDto {\n");
            sb.Append("  Campaign: ").Append(Campaign).Append("\n");
            sb.Append("  Promotion: ").Append(Promotion).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SinglePromotionCampaignResponseDto);
        }

        /// <summary>
        /// Returns true if SinglePromotionCampaignResponseDto instances are equal
        /// </summary>
        /// <param name="input">Instance of SinglePromotionCampaignResponseDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SinglePromotionCampaignResponseDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Campaign == input.Campaign ||
                    (this.Campaign != null &&
                    this.Campaign.Equals(input.Campaign))
                ) && 
                (
                    this.Promotion == input.Promotion ||
                    (this.Promotion != null &&
                    this.Promotion.Equals(input.Promotion))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Campaign != null)
                    hashCode = hashCode * 59 + this.Campaign.GetHashCode();
                if (this.Promotion != null)
                    hashCode = hashCode * 59 + this.Promotion.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
